version: 0.2

phases:
  # steps:
  install:
    commands:
#      - curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64
      - curl -sS -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.4/2023-08-16/bin/linux/amd64/kubectl
      - chmod +x ./kubectl #./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
#      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
      - kubectl version --short --client
      - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      - echo kubectl was installed
    # steps:
  pre_build:
    commands:
      - echo Logging into Amazon EKS...
#      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
#      - export KUBECONFIG=$HOME/.kube/config
      - echo check config
#      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc

      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    # steps:
  build:
    commands:
#      - echo Build started on `date`
#      - mvn install
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
    # steps:
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      #      - kubectl scale --replicas=1 deployment/stockinfo-deployment
      #      - kubectl rollout restart deployment stockinfo-deployment

#      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - kubectl rollout restart deployment/stockinfo-deployment -n default
#      - kubectl get svc --all-namespaces
cache:
  paths:
    - '/root/.m2/**/*'
artifacts:
  files:
    - build.json
    - deployment/*